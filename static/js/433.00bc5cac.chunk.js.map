{"version":3,"file":"static/js/433.00bc5cac.chunk.js","mappings":"sQACA,EAA4B,wBAA5B,EAA4D,oBAA5D,EAA6F,yBAA7F,EAAkI,wBAAlI,EAAuK,yBAAvK,EAA0M,sBAA1M,EAA6O,yB,kBC6D7O,EAxDa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEH,GAAW,GADb,UAIYI,EAAAA,EAAAA,MAJZ,gBAGYC,EAHZ,EAGIC,KAAQD,QAEVH,EAAgBG,GAChBL,GAAW,GANb,4CADc,uBAAC,WAAD,wBAUdO,EACD,GAAE,KAED,gBAAKC,UAAWC,EAAhB,SACGV,GACC,SAACW,EAAA,EAAD,KAEA,iCACE,eAAIF,UAAWC,EAAf,6BACA,eAAID,UAAWC,EAAf,SACGR,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,MAApC,OAChB,eAAaP,UAAWC,EAAxB,UACE,UAAC,KAAD,CAAMO,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMtB,GAA1C,UACGkB,GACC,gBACEK,IAAG,0CAAqCL,GACxCM,IAAKL,EACLM,MAAO,IACPb,UAAWC,KAGb,gBACEU,IACE,+EAEFC,IAAKL,EACLM,MAAO,IACPb,UAAWC,KAGf,cAAGD,UAAWC,EAAd,SAA+BG,QAnB1BC,EADO,UA6B7B,C,6EC1DYH,EAAS,WACpB,OACE,SAAC,KAAD,CACEY,OAAO,MACPD,MAAM,MACNE,MAAM,QACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,IAGvB,C,kMChBKC,EAAW,gCACXC,EAAM,mCAEC5B,EAAiB,mCAAG,uGAEhB6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDC,IAFnC,2IAAH,qDAQjBE,EAAc,mCAAG,WAAMC,GAAN,0FAEbF,EAAAA,EAAAA,IAAA,UACRF,EADQ,iBACSI,EADT,oBAC6BH,EAD7B,oBAFa,2IAAH,sDAUdI,EAAS,mCAAG,WAAMD,GAAN,0FAERF,EAAAA,EAAAA,IAAA,UACRF,EADQ,iBACSI,EADT,4BACqCH,EADrC,oBAFQ,2IAAH,sDAUTK,EAAY,mCAAG,WAAMF,GAAN,0FAEXF,EAAAA,EAAAA,IAAA,UACRF,EADQ,iBACSI,EADT,4BACqCH,EADrC,2BAFW,2IAAH,sDAUZM,EAAiB,mCAAG,WAAMC,GAAN,0FAEhBN,EAAAA,EAAAA,IAAA,UACRF,EADQ,gCACwBC,EADxB,iCACoDO,EADpD,gCAFgB,2IAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Home/Home.module.css?58dd","components/Home/Home.jsx","components/Loader/Loader.jsx","services/api-fetches.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__MGYYT\",\"title\":\"Home_title__XLxL1\",\"moviesList\":\"Home_moviesList__XOOaK\",\"movieItem\":\"Home_movieItem__yfa+9\",\"movieImage\":\"Home_movieImage__F3Uf2\",\"noImage\":\"Home_noImage__ENWxv\",\"movieTitle\":\"Home_movieTitle__Zx60k\"};","import { useState, useEffect } from 'react';\nimport { fetchPopularMovie } from '../../services/api-fetches';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from 'components/Home/Home.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [popularMovie, setPopularMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const {\n        data: { results },\n      } = await fetchPopularMovie();\n      setPopularMovie(results);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <div className={css.container}>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        <>\n          <h1 className={css.title}>Trending today</h1>\n          <ul className={css.moviesList}>\n            {popularMovie.map(({ original_title, id, poster_path, title }) => (\n              <li key={id} className={css.movieItem}>\n                <Link to={`/Movies/${id}`} state={{ from: location }}>\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                      alt={title}\n                      width={250}\n                      className={css.movieImage}\n                    />\n                  ) : (\n                    <img\n                      src={\n                        'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n                      }\n                      alt={title}\n                      width={250}\n                      className={css.noImage}\n                    />\n                  )}\n                  <p className={css.movieTitle}>{original_title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"white\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b27f2f3d79b3a6e46fc2bca972d7f174';\n\nexport const fetchPopularMovie = async () => {\n  try {\n    return await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieById = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchCast = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieByQuery = async query => {\n  try {\n    return await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["location","useLocation","useState","loading","setLoading","popularMovie","setPopularMovie","useEffect","fetchPopularMovie","results","data","fetchData","className","css","Loader","map","original_title","id","poster_path","title","to","state","from","src","alt","width","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","BASE_URL","KEY","axios","fetchMovieById","movie_id","fetchCast","fetchReviews","fetchMovieByQuery","query"],"sourceRoot":""}